name: AI Model Frontend CI/CD Pipeline

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

env:
  NODE_VERSION: '20'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Clean install dependencies
      run: npm ci

    - name: Disable Next.js telemetry
      run: npx next telemetry disable
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Build application (no cache)
      env:
        NEXT_FORCE_TURBOPACK: 0
        NEXT_TELEMETRY_DISABLED: 1
        NODE_OPTIONS: --max-old-space-size=4096
      run: |
        rm -rf .next node_modules/.cache || true
        npm run build

    - name: Verify critical routes exist
      run: |
        set -e
        grep -R "/forgot-password" .next/ || (echo "forgot-password route missing" && exit 1)
        grep -R "/reset-password" .next/ || (echo "reset-password route missing" && exit 1)
        grep -R "/auth/callback" .next/ || (echo "auth/callback route missing" && exit 1)
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/

  # Production deployment (main branch only)
  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Deploy to Production
      run: |
        echo "üöÄ Deploying to production from main branch"
        echo "‚úÖ All tests passed, ready for production deployment"
        echo "üîí This deployment is triggered only from main branch"
    
    - name: Notify deployment success
      run: |
        echo "‚úÖ Production deployment initiated successfully"
        echo "üåê Production URL: https://ai-maas-production.tinconnect.com"

  # Staging deployment (staging branch only)
  deploy-staging:
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Deploy to Staging
      run: |
        echo "üß™ Deploying to staging environment"
        echo "‚úÖ All tests passed, ready for staging deployment"
    
    - name: Notify staging deployment
      run: |
        echo "‚úÖ Staging deployment initiated successfully"
        echo "üß™ Staging environment updated for testing"

  # Note: Vercel will handle the actual deployment based on branch protection rules
  # - main branch ‚Üí Production (ai-maas-production.tinconnect.com)
  # - staging branch ‚Üí Staging environment
  # - develop branch ‚Üí No deployment (testing only)